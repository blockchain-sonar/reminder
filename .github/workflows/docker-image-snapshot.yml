# GITHUB_REPOSITORY - The owner and repository name. For example, octocat/Hello-World.
# https://docs.github.com/en/actions/learn-github-actions/environment-variables

name: Docker Image (Snapshot)

on:
  push:
    branches:
      - '*'
    tags:
      - $default-branch
  pull_request:
    branches:
      - $default-branch

jobs:
  default:
    strategy:
      matrix:
        # os: [ubuntu-latest]
        platform: [linux/amd64,linux/arm64]
    # runs-on: ${{ matrix.os }}
    runs-on: ubuntu-latest
    steps:
      - name: Set Variables
        run: |
          PLATFORM_SLUG=$(echo "${{ matrix.platform }}" | sed 's~/~-~g')
          echo "PLATFORM_SLUG=${PLATFORM_SLUG}" >> $GITHUB_ENV
        
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set Up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set Up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # See https://github.com/docker/metadata-action#readme
      - name: Docker Meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/${{ github.repository }}/snapshot
          # generate Docker tags based on the following events/attributes
          tags: |
            type=raw,value={{branch}}
            type=raw,value={{branch}}.{{sha}}
            type=ref,event=tag

      # See https://github.com/docker/login-action
      - name: Log In To The GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # See https://github.com/docker/build-push-action/blob/master/docs/advanced/test-before-push.md
      - name: Build Docker Image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: docker/Dockerfile
          build-args: |
            BUILD_CONFIGURATION=snapshot
          platforms: ${{ matrix.platform }}
          push: false
          load: true
          tags: pre-image

      # See https://github.com/docker/build-push-action/blob/master/docs/advanced/test-before-push.md
      - name: Run Tests
        run: |
          docker build --build-arg TEST_IMAGE="pre-image" --tag "test-image" --file docker/Dockerfile.tests .
          docker run --rm --volume "${PWD}/.test-result:/data" "test-image"

      # See https://github.com/actions/upload-artifact#readme
      - name: Upload Tests Results
        uses: actions/upload-artifact@v3
        with:
          name: unit-test-results-${{ env.PLATFORM_SLUG }}
          path: .test-result/
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}

      # See https://github.com/docker/build-push-action/blob/master/docs/advanced/test-before-push.md
      - name: Push Docker Image
        uses: docker/build-push-action@v3
        with:
          # No build here, just push. Workflow internal cache will be used from previous step on 'Build Docker Image' step
          context: .
          file: docker/Dockerfile
          build-args: |
            BUILD_CONFIGURATION=release
          platforms: ${{ matrix.platform }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
